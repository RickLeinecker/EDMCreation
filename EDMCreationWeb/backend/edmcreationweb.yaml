openapi: 3.0.0

info:
  title: EDM Creation Web API
  version: '1.0'

servers:
  - url: http://localhost:5000

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
security:
  - bearerAuth: []

paths:
  /api/users/signup:
    post:
      summary: Registration
      tags:
        - account 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "Treven"                 
                email:
                  type: string
                  example: "treven@treven.com" 
                password:
                  type: string
                  example: "treven123"
                confirmationPassword:
                  type: string
                  example: "treven123"
                description:
                  type: string
                  example: "this is me"
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '422':
          description: Input errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        values:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
  /api/users/login:
    post:
      summary: Login
      tags:
        - account 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "Treven"                 
                password:
                  type: string
                  example: "treven123"
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '422':
          description: Input errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        values:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
  /api/compositions/upload:
    post:
      summary: Song upload
      description: file and user id needed
      tags:
        - compositions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                title:
                  type: string
                genre:
                  type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '422':
          description: Input errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        values:
                          type: string
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
  /api/compositions/popular:
    get:
      summary: Popular songs
      tags:
        - compositions
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: "1"
        - in: query
          name: user
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        '400':
          description: Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /api/compositions/user/{user_id}:
    get:
      summary: user compositions
      tags:
        - compositions
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        '400':
          description: Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /api/compositions/postcomment:
    post:
      summary: post comment
      tags:
        - compositions 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:               
                song_id:
                  type: string
                  example: 605baea083633672d3f04cd7
                comment:
                  type: string
                  example: this song is bangin fam
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /api/users/info/{user_id}:
    get:
      summary: Popular songs
      tags:
        - compositions
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        '400':
          description: Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /api/users/liketoggle:
    post:
      summary: user favorite a song
      tags:
        - account 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:               
                song_id:
                  type: string
                  example: 605baea083633672d3f04cd7
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string